/*
 * Copyright (C) 2006-2014 F. Gerbig (fgerbig@users.sourceforge.net)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 3 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package jgamebase.gui;

import java.util.List;

import javax.swing.JList;

import jgamebase.Const;
import jgamebase.Const.CloseAction;
import jgamebase.db.model.Extra;

/**
 * The GameBase GUI.
 * 
 * @author F. Gerbig (fgerbig@users.sourceforge.net)
 */
public class ExtrasDialog extends javax.swing.JDialog {

  private static final long serialVersionUID = 3242124579733208443L;

  private CloseAction closeAction = CloseAction.CANCEL;

  String gameName;

  List<Extra> extras;

  public ExtrasDialog(final List<Extra> extras, final String gameName) {
    initComponents();

    this.extras = extras;

    this.gameName = gameName;
    setTitle("Extras for " + gameName);
    extrasList.setModel(new ListListModel(extras));

    if (extrasList.getModel().getSize() > 0) {
      extrasList.setSelectedIndex(0);
    }

    this.setSize(400, 200);
    setLocationRelativeTo(null);
    setVisible(true);
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  protected javax.swing.JList extrasList;

  // End of variables declaration//GEN-END:variables

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code
  // <editor-fold defaultstate="collapsed" desc=" Generated Code
  // <editor-fold defaultstate="collapsed"
  // <editor-fold defaultstate="collapsed"
  // desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    final javax.swing.JPanel extraPaths = new javax.swing.JPanel();
    final javax.swing.JPanel extraPathsPanel = new javax.swing.JPanel();
    final javax.swing.JButton extraAddButton = new javax.swing.JButton();
    final javax.swing.JButton extraRemoveButton = new javax.swing.JButton();
    final javax.swing.JButton extraUpButton = new javax.swing.JButton();
    final javax.swing.JButton extraDownButton = new javax.swing.JButton();
    final javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
    extrasList = new javax.swing.JList();
    final javax.swing.JPanel OkCancelPanel = new javax.swing.JPanel();
    final javax.swing.JPanel jPanel9 = new javax.swing.JPanel();
    final javax.swing.JButton okButton = new javax.swing.JButton();
    final javax.swing.JButton cancelButton = new javax.swing.JButton();

    setTitle("Paths");
    setModal(true);
    addWindowListener(new java.awt.event.WindowAdapter() {
      @Override
      public void windowClosing(final java.awt.event.WindowEvent evt) {
        exitFormWindowClosing(evt);
      }
    });

    extraPaths.setBorder(javax.swing.BorderFactory.createTitledBorder("Extras"));
    extraPaths.setLayout(new java.awt.BorderLayout());

    extraPathsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

    extraAddButton.setIcon(Const.ICON_PATHSELECTOR_ADD);
    extraAddButton.setBorder(null);
    extraAddButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        extraAddActionPerformed(evt);
      }
    });
    extraPathsPanel.add(extraAddButton);

    extraRemoveButton.setIcon(Const.ICON_PATHSELECTOR_REMOVE);
    extraRemoveButton.setBorder(null);
    extraRemoveButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        extraRemoveActionPerformed(evt);
      }
    });
    extraPathsPanel.add(extraRemoveButton);

    extraUpButton.setIcon(Const.ICON_PATHSELECTOR_UP);
    extraUpButton.setBorder(null);
    extraUpButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        extraUpActionPerformed(evt);
      }
    });
    extraPathsPanel.add(extraUpButton);

    extraDownButton.setIcon(Const.ICON_PATHSELECTOR_DOWN);
    extraDownButton.setBorder(null);
    extraDownButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        extraDownActionPerformed(evt);
      }
    });
    extraPathsPanel.add(extraDownButton);

    extraPaths.add(extraPathsPanel, java.awt.BorderLayout.NORTH);

    extrasList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    extrasList.addMouseListener(new java.awt.event.MouseAdapter() {
      @Override
      public void mouseClicked(final java.awt.event.MouseEvent evt) {
        extrasListMouseClicked(evt);
      }
    });
    jScrollPane1.setViewportView(extrasList);

    extraPaths.add(jScrollPane1, java.awt.BorderLayout.CENTER);

    getContentPane().add(extraPaths, java.awt.BorderLayout.CENTER);

    OkCancelPanel.setLayout(new java.awt.BorderLayout());

    jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

    okButton.setMnemonic('O');
    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        okActionPerformed(evt);
      }
    });
    jPanel9.add(okButton);

    cancelButton.setMnemonic('C');
    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        cancelActionPerformed(evt);
      }
    });
    jPanel9.add(cancelButton);

    OkCancelPanel.add(jPanel9, java.awt.BorderLayout.SOUTH);

    getContentPane().add(OkCancelPanel, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void extrasListMouseClicked(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_extrasListMouseClicked
    if (Gui.doubleClick(evt)) {
      editExtra(extrasList);
    }
  }// GEN-LAST:event_extrasListMouseClicked

  private void extraDownActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_extraDownActionPerformed
    extras = ListListMethods.moveSelectedDown(extrasList);

  }// GEN-LAST:event_extraDownActionPerformed

  private void extraUpActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_extraUpActionPerformed
    extras = ListListMethods.moveSelectedUp(extrasList);
  }// GEN-LAST:event_extraUpActionPerformed

  private void extraRemoveActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_extraRemoveActionPerformed
    extras = ListListMethods.removeSelected(extrasList);
  }// GEN-LAST:event_extraRemoveActionPerformed

  private void extraAddActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_extraAddActionPerformed
    addExtra(extrasList);
  }// GEN-LAST:event_extraAddActionPerformed

  private void cancelActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelActionPerformed
    closeAction = CloseAction.CANCEL;
    setVisible(false);
  }// GEN-LAST:event_cancelActionPerformed

  private void okActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okActionPerformed
    closeAction = CloseAction.OK;
    setVisible(false);
  }// GEN-LAST:event_okActionPerformed

  public List<Extra> getExtras() {

    // set display order for (possibly) new order
    int i = 0;
    for (final Extra extra : extras) {
      extra.setDisplayOrder(i++);
    }

    return extras;
  }

  private void editExtra(final JList list) {
    final int row = list.getSelectedIndex();

    if ((row >= 0) && (row < list.getModel().getSize())) {
      final Extra extra = (Extra) list.getSelectedValue();
      final ExtrasChooserDialog dialog = new ExtrasChooserDialog(gameName, extra);
      if (dialog.getCloseAction() == CloseAction.OK) {
        extra.setFilename(dialog.getExtraFilename());
        extra.setName(dialog.getExtraName());
      }
    }
  }

  private void addExtra(final JList list) {
    final Extra extra = new Extra();
    extra.setName("New Extra");

    final ExtrasChooserDialog dialog = new ExtrasChooserDialog(gameName, extra);
    if (dialog.getCloseAction() == CloseAction.OK) {
      extra.setFilename(dialog.getExtraFilename());
      extra.setName(dialog.getExtraName());
      extras.add(extra);
      ((ListListModel) list.getModel()).addElement(extra);
    }
  }

  private void exitFormWindowClosing(final java.awt.event.WindowEvent evt) {// GEN-FIRST:event_exitFormWindowClosing
    closeAction = CloseAction.CANCEL;
    setVisible(false);
  }// GEN-LAST:event_exitFormWindowClosing

  public CloseAction getCloseAction() {
    return closeAction;
  }
}