/*
 * Copyright (C) 2006-2014 F. Gerbig (fgerbig@users.sourceforge.net)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 3 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package jgamebase.gui;

import jgamebase.model.Preferences;

/**
 * The GameBase GUI.
 * 
 * @author F. Gerbig (fgerbig@users.sourceforge.net)
 */
public class OptionsDialog extends javax.swing.JDialog {

  /**
	 *
	 */
  private static final long serialVersionUID = -4640109064892570658L;

  public OptionsDialog() {
    initComponents();

    extrasDisplayFilenames.setSelected(Preferences.is(Preferences.EXTRAS_SHOW_FILENAMES));

    documentOpenCommand.setText(Preferences.get(Preferences.DOCUMENT_OPEN_COMMAND));
    pictureOpenCommand.setText(Preferences.get(Preferences.PICTURE_OPEN_COMMAND));

    this.setSize(320, 160);
    setLocationRelativeTo(null);
    setVisible(true);
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField documentOpenCommand;
  private javax.swing.JCheckBox extrasDisplayFilenames;
  private javax.swing.JTextField pictureOpenCommand;

  // End of variables declaration//GEN-END:variables

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code
  // <editor-fold defaultstate="collapsed" desc=" Generated Code
  // <editor-fold defaultstate="collapsed"
  // <editor-fold defaultstate="collapsed"
  // desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    final javax.swing.JTabbedPane mainTabbedPane = new javax.swing.JTabbedPane();
    final javax.swing.JPanel generalPanel = new javax.swing.JPanel();
    final javax.swing.JPanel DisplayOptionsPanel = new javax.swing.JPanel();
    extrasDisplayFilenames = new javax.swing.JCheckBox();
    final javax.swing.JPanel OpenCommandPanel = new javax.swing.JPanel();
    final javax.swing.JLabel documentOpenCommandLabel = new javax.swing.JLabel();
    documentOpenCommand = new javax.swing.JTextField();
    final javax.swing.JLabel pictureOpenCommandLabel = new javax.swing.JLabel();
    pictureOpenCommand = new javax.swing.JTextField();
    final javax.swing.JPanel fillPanel = new javax.swing.JPanel();
    final javax.swing.JPanel OkCancelPanel = new javax.swing.JPanel();
    final javax.swing.JPanel jPanel9 = new javax.swing.JPanel();
    final javax.swing.JButton okButton = new javax.swing.JButton();
    final javax.swing.JButton cancelButton = new javax.swing.JButton();

    setTitle("jGameBase Options");
    setMinimumSize(new java.awt.Dimension(320, 240));
    setModal(true);
    addWindowListener(new java.awt.event.WindowAdapter() {
      @Override
      public void windowClosing(final java.awt.event.WindowEvent evt) {
        exitFormWindowClosing(evt);
      }
    });

    generalPanel.setLayout(new java.awt.GridBagLayout());

    DisplayOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Display Options"));
    DisplayOptionsPanel
        .setToolTipText("<html>\nOptions affecting the infomation displayed.\n</html>");
    DisplayOptionsPanel.setLayout(new java.awt.GridBagLayout());

    extrasDisplayFilenames.setText("Display file names in tooltips of Extras");
    extrasDisplayFilenames
        .setToolTipText("<html>\nWhether the tool tip for Extras contains only the name of the Extra or the name and the file name.\n</html>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    DisplayOptionsPanel.add(extrasDisplayFilenames, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 3, 5);
    generalPanel.add(DisplayOptionsPanel, gridBagConstraints);

    OpenCommandPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Open Commands"));
    OpenCommandPanel
        .setToolTipText("<html>\nThe commands used to open specific files, e.g. extras or the html help.<br>\nOn most linux distributions simply use &quot;xdg-open&quot;.\n</html>");
    OpenCommandPanel.setLayout(new java.awt.GridBagLayout());

    documentOpenCommandLabel.setText("Documents:");
    documentOpenCommandLabel
        .setToolTipText("<html>\nThe command used to open documents, e.g. extras or the html help.<br>\nOn most linux distributions simply use &quot;xdg-open&quot;.\n</html>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
    OpenCommandPanel.add(documentOpenCommandLabel, gridBagConstraints);

    documentOpenCommand
        .setToolTipText("<html>\nThe command used to open documents, e.g. extras or the html help.<br>\nOn most linux distributions simply use &quot;xdg-open&quot;.\n</html>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
    OpenCommandPanel.add(documentOpenCommand, gridBagConstraints);

    pictureOpenCommandLabel.setText("Pictures:");
    pictureOpenCommandLabel
        .setToolTipText("<html>\nThe command used to open pictures, e.g. screenshots or advertisements.<br>\nLeave empty to use internal viewer.<br>\nOn most linux distributions you can use &quot;xdg-open&quot;.\n</html>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
    OpenCommandPanel.add(pictureOpenCommandLabel, gridBagConstraints);

    pictureOpenCommand
        .setToolTipText("<html>\nThe command used to open pictures, e.g. screenshots or advertisements.<br>\nLeave empty to use internal viewer.<br>\nOn most linux distributions you can use &quot;xdg-open&quot;.\n</html>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
    OpenCommandPanel.add(pictureOpenCommand, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 3, 5);
    generalPanel.add(OpenCommandPanel, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
    generalPanel.add(fillPanel, gridBagConstraints);

    mainTabbedPane.addTab("General", generalPanel);

    getContentPane().add(mainTabbedPane, java.awt.BorderLayout.CENTER);

    OkCancelPanel.setLayout(new java.awt.BorderLayout());

    jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

    okButton.setMnemonic('O');
    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        okActionPerformed(evt);
      }
    });
    jPanel9.add(okButton);

    cancelButton.setMnemonic('C');
    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        cancelActionPerformed(evt);
      }
    });
    jPanel9.add(cancelButton);

    OkCancelPanel.add(jPanel9, java.awt.BorderLayout.EAST);

    getContentPane().add(OkCancelPanel, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void cancelActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelActionPerformed
    dispose();
  }// GEN-LAST:event_cancelActionPerformed

  private void okActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okActionPerformed
    Preferences.set(Preferences.EXTRAS_SHOW_FILENAMES, extrasDisplayFilenames.isSelected());

    Preferences.set(Preferences.DOCUMENT_OPEN_COMMAND, documentOpenCommand.getText());
    Preferences.set(Preferences.PICTURE_OPEN_COMMAND, pictureOpenCommand.getText());

    dispose();
  }// GEN-LAST:event_okActionPerformed

  private void exitFormWindowClosing(final java.awt.event.WindowEvent evt) {// GEN-FIRST:event_exitFormWindowClosing
    dispose();
  }// GEN-LAST:event_exitFormWindowClosing
}