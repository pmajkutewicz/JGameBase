/*
 * Copyright (C) 2006-2014 F. Gerbig (fgerbig@users.sourceforge.net)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 3 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package jgamebase.gui;

import jgamebase.db.Db;
import jgamebase.db.model.Game;

/**
 * The GameBase GUI.
 * 
 * @author F. Gerbig (fgerbig@users.sourceforge.net)
 */
public class SetGameLinkDialog extends javax.swing.JDialog {

  /**
	 * 
	 */
  private static final long serialVersionUID = -8916252578988996460L;

  Game selectedGame;

  Game linkGame;

  public SetGameLinkDialog(final Game selectedGame, final Game linkGame) {
    this.selectedGame = selectedGame;
    this.linkGame = linkGame;

    initComponents();
    mainPanel.setBorder(new javax.swing.border.TitledBorder(linkGame.getName()));
    prequel.setText("is Precursor to " + selectedGame.getName());
    sequel.setText("is Sequel to " + selectedGame.getName());
    related.setText("is Related Game to " + selectedGame.getName());
    this.setSize(320, 160);
    setLocationRelativeTo(null);
    setVisible(true);
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox bidirectionalLink;
  private javax.swing.JPanel mainPanel;
  private javax.swing.JRadioButton prequel;
  private javax.swing.JRadioButton related;
  private javax.swing.JRadioButton sequel;

  // End of variables declaration//GEN-END:variables

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code
  // <editor-fold defaultstate="collapsed" desc=" Generated Code
  // <editor-fold defaultstate="collapsed"
  // <editor-fold defaultstate="collapsed"
  // desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    final javax.swing.ButtonGroup buttonGroup1 = new javax.swing.ButtonGroup();
    final javax.swing.JPanel emulatorsPanel = new javax.swing.JPanel();
    mainPanel = new javax.swing.JPanel();
    prequel = new javax.swing.JRadioButton();
    sequel = new javax.swing.JRadioButton();
    related = new javax.swing.JRadioButton();
    final javax.swing.JPanel OkCancelPanel = new javax.swing.JPanel();
    final javax.swing.JPanel jPanel9 = new javax.swing.JPanel();
    final javax.swing.JButton okButton = new javax.swing.JButton();
    final javax.swing.JButton cancelButton = new javax.swing.JButton();
    bidirectionalLink = new javax.swing.JCheckBox();

    setModal(true);
    addWindowListener(new java.awt.event.WindowAdapter() {
      @Override
      public void windowClosing(final java.awt.event.WindowEvent evt) {
        exitFormWindowClosing(evt);
      }
    });

    emulatorsPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
    emulatorsPanel.setLayout(new java.awt.BorderLayout());

    mainPanel.setLayout(new java.awt.GridLayout(3, 1));

    buttonGroup1.add(prequel);
    prequel.setMnemonic('P');
    prequel.setSelected(true);
    mainPanel.add(prequel);

    buttonGroup1.add(sequel);
    sequel.setMnemonic('S');
    mainPanel.add(sequel);

    buttonGroup1.add(related);
    related.setMnemonic('R');
    mainPanel.add(related);

    emulatorsPanel.add(mainPanel, java.awt.BorderLayout.CENTER);

    getContentPane().add(emulatorsPanel, java.awt.BorderLayout.CENTER);

    OkCancelPanel.setLayout(new java.awt.BorderLayout());

    jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

    okButton.setMnemonic('O');
    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        okActionPerformed(evt);
      }
    });
    jPanel9.add(okButton);

    cancelButton.setMnemonic('C');
    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(final java.awt.event.ActionEvent evt) {
        cancelActionPerformed(evt);
      }
    });
    jPanel9.add(cancelButton);

    OkCancelPanel.add(jPanel9, java.awt.BorderLayout.EAST);

    bidirectionalLink.setMnemonic('M');
    bidirectionalLink.setText("Set bidirectional Link");
    OkCancelPanel.add(bidirectionalLink, java.awt.BorderLayout.WEST);

    getContentPane().add(OkCancelPanel, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void cancelActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelActionPerformed
    dispose();
  }// GEN-LAST:event_cancelActionPerformed

  private void okActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okActionPerformed
    if (prequel.isSelected()) {
      selectedGame.setPrequelId(linkGame.getId());
      if (bidirectionalLink.isSelected()) {
        linkGame.setSequelId(selectedGame.getId());
      }

    } else if (sequel.isSelected()) {
      selectedGame.setSequelId(linkGame.getId());
      if (bidirectionalLink.isSelected()) {
        linkGame.setPrequelId(selectedGame.getId());
      }
    } else {
      selectedGame.setRelatedId(linkGame.getId());
      if (bidirectionalLink.isSelected()) {
        linkGame.setRelatedId(selectedGame.getId());
      }
    }

    dispose();

    Db.saveOrUpdate(selectedGame);
    Db.saveOrUpdate(linkGame);
  }// GEN-LAST:event_okActionPerformed

  private void exitFormWindowClosing(final java.awt.event.WindowEvent evt) {// GEN-FIRST:event_exitFormWindowClosing
    dispose();
  }// GEN-LAST:event_exitFormWindowClosing
}